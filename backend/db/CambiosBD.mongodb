const { ObjectId } = require('mongodb');

use('AzertyDB');

// Insert a few documents into the sales collection.
// Create a collection named "Active_classes"
// db.createCollection("Active_classes");
// Find all documents in the Proffesor collection.

// Move all courses from Professor collection to Courses collection and delete courses from Professor collection and give each course a id for the professor 
db.Professor.find({}).forEach(function(p){
    
    p.courses.forEach(function(c){
        c.professor_id = p._id;
        db.Courses.insertOne(c);
    }
)});

// Eliminar el campo id de todos los cursos.
use('AzertyDB');
db.Courses.updateOne({}, {$unset:{id:""}})



// Find all courses from Juan
use('AzertyDB');
db.Courses.find({professor_id: db.Professor.findOne({name:"Juan"})._id});

// Rename professor_id to tutor_id
use('AzertyDB');
db.Courses.updateMany({}, {$rename:{professor_id:"tutor_id"}})

// Delete courses from Professor collection
use('AzertyDB');
db.Professor.updateMany({}, {$unset:{courses:""}})


use('AzertyDB');
db.Courses.updateMany(
    { }, // Filtro vacío para seleccionar todos los documentos
    { $unset: { "active_classes.$[].id": "" } } // Añadir un nuevo campo 'id' con un valor único (ObjectId)
  )
  

use('AzertyDB');
db.Courses.find({}).forEach(course => {
    // Itera sobre cada active_class en el curso
    course.active_classes.forEach(ac => {
        // Asigna un nuevo ObjectId a cada active_class
        ac._id = new ObjectId();
    });

    // Actualiza el documento con las modificaciones
    db.Courses.updateOne(
        { _id: course._id }, // Filtra por el ID del curso
        { $set: { active_classes: course.active_classes } } // Actualiza active_classes
    );
});






use('AzertyDB');
db.Courses.updateMany(
    { }, // Filtro vacío para seleccionar todos los documentos
    { $unset: { "reviews.$[].id": "" } } // Añadir un nuevo campo 'id' con un valor único (ObjectId)
  )


use('AzertyDB');
db.Courses.find({}).forEach(course => {
    // Itera sobre cada active_class en el curso
    course.reviews.forEach(r => {
        // Asigna un nuevo ObjectId a cada active_class
        r._id = new ObjectId();
    });

    // Actualiza el documento con las modificaciones
    db.Courses.updateOne(
        { _id: course._id }, // Filtra por el ID del curso
        { $set: { reviews: course.reviews } } // Actualiza active_classes
    );
});